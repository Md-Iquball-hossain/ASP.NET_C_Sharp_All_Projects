// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManagementApp.Models;

#nullable disable

namespace ProductManagementApp.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    partial class ProductDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductManagementApp.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            Address = "Addres 1",
                            CompanyName = "Company 1"
                        },
                        new
                        {
                            CompanyId = 2,
                            Address = "Addres 2",
                            CompanyName = "Company 2"
                        },
                        new
                        {
                            CompanyId = 3,
                            Address = "Addres 3",
                            CompanyName = "Company 3"
                        },
                        new
                        {
                            CompanyId = 4,
                            Address = "Addres 4",
                            CompanyName = "Company 4"
                        },
                        new
                        {
                            CompanyId = 5,
                            Address = "Addres 5",
                            CompanyName = "Company 5"
                        },
                        new
                        {
                            CompanyId = 6,
                            Address = "Addres 6",
                            CompanyName = "Company 6"
                        },
                        new
                        {
                            CompanyId = 7,
                            Address = "Addres 7",
                            CompanyName = "Company 7"
                        });
                });

            modelBuilder.Entity("ProductManagementApp.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SellUnit")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("money");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "P01",
                            Picture = "1.jpg",
                            SellUnit = 1,
                            UnitPrice = 950.00m
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "P02",
                            Picture = "2.jpg",
                            SellUnit = 1,
                            UnitPrice = 1900.00m
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "P03",
                            Picture = "3.jpg",
                            SellUnit = 1,
                            UnitPrice = 2850.00m
                        },
                        new
                        {
                            ProductId = 4,
                            Name = "P04",
                            Picture = "4.jpg",
                            SellUnit = 1,
                            UnitPrice = 3800.00m
                        },
                        new
                        {
                            ProductId = 5,
                            Name = "P05",
                            Picture = "5.jpg",
                            SellUnit = 1,
                            UnitPrice = 4750.00m
                        },
                        new
                        {
                            ProductId = 6,
                            Name = "P06",
                            Picture = "6.jpg",
                            SellUnit = 1,
                            UnitPrice = 5700.00m
                        },
                        new
                        {
                            ProductId = 7,
                            Name = "P07",
                            Picture = "7.jpg",
                            SellUnit = 1,
                            UnitPrice = 6650.00m
                        });
                });

            modelBuilder.Entity("ProductManagementApp.Models.ProductInventory", b =>
                {
                    b.Property<int>("ProductInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductInventoryId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("ProductInventoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductInventories");

                    b.HasData(
                        new
                        {
                            ProductInventoryId = 1,
                            CompanyId = 1,
                            Date = new DateTime(2023, 8, 31, 17, 28, 53, 195, DateTimeKind.Local).AddTicks(6898),
                            ProductId = 1,
                            Quantity = 50
                        },
                        new
                        {
                            ProductInventoryId = 2,
                            CompanyId = 2,
                            Date = new DateTime(2023, 8, 8, 17, 28, 53, 195, DateTimeKind.Local).AddTicks(6935),
                            ProductId = 2,
                            Quantity = 100
                        },
                        new
                        {
                            ProductInventoryId = 3,
                            CompanyId = 3,
                            Date = new DateTime(2023, 7, 16, 17, 28, 53, 195, DateTimeKind.Local).AddTicks(6944),
                            ProductId = 3,
                            Quantity = 150
                        },
                        new
                        {
                            ProductInventoryId = 4,
                            CompanyId = 4,
                            Date = new DateTime(2023, 6, 23, 17, 28, 53, 195, DateTimeKind.Local).AddTicks(6951),
                            ProductId = 4,
                            Quantity = 200
                        },
                        new
                        {
                            ProductInventoryId = 5,
                            CompanyId = 5,
                            Date = new DateTime(2023, 5, 31, 17, 28, 53, 195, DateTimeKind.Local).AddTicks(6958),
                            ProductId = 5,
                            Quantity = 250
                        },
                        new
                        {
                            ProductInventoryId = 6,
                            CompanyId = 6,
                            Date = new DateTime(2023, 5, 8, 17, 28, 53, 195, DateTimeKind.Local).AddTicks(6967),
                            ProductId = 6,
                            Quantity = 300
                        },
                        new
                        {
                            ProductInventoryId = 7,
                            CompanyId = 7,
                            Date = new DateTime(2023, 4, 15, 17, 28, 53, 195, DateTimeKind.Local).AddTicks(6975),
                            ProductId = 7,
                            Quantity = 350
                        });
                });

            modelBuilder.Entity("ProductManagementApp.Models.ProductInventory", b =>
                {
                    b.HasOne("ProductManagementApp.Models.Company", "Company")
                        .WithMany("ProductInventories")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductManagementApp.Models.Product", "Product")
                        .WithMany("ProductInventories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductManagementApp.Models.Company", b =>
                {
                    b.Navigation("ProductInventories");
                });

            modelBuilder.Entity("ProductManagementApp.Models.Product", b =>
                {
                    b.Navigation("ProductInventories");
                });
#pragma warning restore 612, 618
        }
    }
}
